import org.gradle.api.DefaultTask
import org.gradle.api.tasks.TaskAction
import groovy.io.FileType

class DAOGeneratorTask extends DefaultTask {
  
	def classMapping = ["INTEGER":"int","TEXT":"String","REAL":"float"]
	def daoPath
	def modelPath
	def csvDir
	def defaultExt = '.csv'
	
  @TaskAction
  def generateClasses() {
		generateModelClasses()
		generateDAOClasses()
		generateFactory()
  }
	
	def generateModelClasses(){
		println "creating DAO models"
		def modelDir = new File(modelPath).mkdir()
		
		def dir = new File(csvDir)
		dir.eachFileMatch(~/.*?\.csv/){ file -> 
		
			//table name is file name
			def tableName = (file.name - defaultExt).toLowerCase().capitalize()
			
			def declarations
			def constructors
			def gettersAndSetters
			
			File f = new File("${modelPath}/${tableName}.java")
			
			//start writing the script
			f.write("/* Auto-generated by Gradle Build generateClasses task*/")
			f.write("public class ${tableName} {\n")
			
			def rows = file.readLines()
			
			//remove first header of csv file
			rows.remove(0)
			
			rows.each{
				declarations += "${buildDeclaration(it)}\n"
			}
			
			f.append(declarations)
			f.append("\n}\n\n");
    }
	}
	
	def generateDAOClasses(){
		println "creating DAO classes"
	}
	
	def generateFactory(){
		println "creating DAO factory"
	}
	
	def buildDeclaration(r){
    r = r.tokenize(',')
		def str = "private ${classMapping.${r[1]}} ${r[0].toLowerCase().capitalize()}"
    return str.trim()
	}
}